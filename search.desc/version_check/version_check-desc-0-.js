searchState.loadedDescShard("version_check", 0, "This tiny crate checks that the running or installed <code>rustc</code> …\nRelease channel: “dev”, “nightly”, “beta”, or …\nRelease date including year, month, and day.\nVersion number: <code>major.minor.patch</code>, ignoring release …\nReturns <code>true</code> if <code>self</code> is greater than or equal to <code>version</code>.\nReturns <code>true</code> if <code>self</code> occurs on or after <code>date</code>.\nReturns <code>true</code> if <code>self</code> is less than or equal to <code>version</code>.\nReturns <code>true</code> if <code>self</code> occurs on or before <code>date</code>.\nReturns <code>true</code> if <code>self</code> is exactly equal to <code>version</code>.\nReturns <code>true</code> if <code>self</code> occurs exactly on <code>date</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>Version</code> from <code>(major, minor, patch)</code> version …\nCreates a <code>Date</code> from <code>(year, month, day)</code> date components.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if this channel is <code>beta</code> and <code>false</code> otherwise.\nReturns <code>true</code> if this channel is <code>dev</code> and <code>false</code> otherwise.\nChecks that the running or installed <code>rustc</code> was released …\nChecks that the running or installed <code>rustc</code> is <strong>exactly</strong> some …\nChecks whether the running or installed <code>rustc</code> supports …\nChecks that the running or installed <code>rustc</code> was released <strong>on </strong>…\nChecks that the running or installed <code>rustc</code> is <strong>at most</strong> some …\nChecks that the running or installed <code>rustc</code> was released <strong>on </strong>…\nChecks that the running or installed <code>rustc</code> is <strong>at least</strong> …\nReturns <code>true</code> if this channel is <code>nightly</code> and <code>false</code> …\nReturns <code>true</code> if this channel is <code>stable</code> and <code>false</code> otherwise.\nParse a Rust release version (of the form …\nParse a Rust release channel from a Rust release version …\nParse a release date of the form <code>%Y-%m-%d</code>. Returns <code>None</code> if …\nReads the version of the running compiler. If it cannot be …\nReads the release channel of the running compiler. If it …\nReads the release date of the running compiler. If it …\nChecks whether the running or installed <code>rustc</code> supports …\nReturns <code>true</code> if this channel supports feature flags. In …\nReturns the <code>(major, minor, patch)</code> version components of …\nReads the triple of <code>Version</code>, <code>Channel</code>, and <code>Date</code> of the …")