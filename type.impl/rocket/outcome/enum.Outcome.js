(function() {
    var type_impls = Object.fromEntries([["rocket",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Outcome%3CS,+E,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#104\">Source</a><a href=\"#impl-Clone-for-Outcome%3CS,+E,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;S, E, F&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#104\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;S, E, F&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rocket::data::from_data::Outcome","rocket::request::from_request::Outcome","rocket::route::handler::Outcome"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Outcome%3CS,+E,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#754-758\">Source</a><a href=\"#impl-Debug-for-Outcome%3CS,+E,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, E, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;S, E, F&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#755-757\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rocket::data::from_data::Outcome","rocket::request::from_request::Outcome","rocket::route::handler::Outcome"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Outcome%3CS,+E,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#760-764\">Source</a><a href=\"#impl-Display-for-Outcome%3CS,+E,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, E, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;S, E, F&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#761-763\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","rocket::data::from_data::Outcome","rocket::request::from_request::Outcome","rocket::route::handler::Outcome"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Outcome%3CS,+E,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#104\">Source</a><a href=\"#impl-Hash-for-Outcome%3CS,+E,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>, E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;S, E, F&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#104\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","rocket::data::from_data::Outcome","rocket::request::from_request::Outcome","rocket::route::handler::Outcome"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Outcome%3CS,+E,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#104\">Source</a><a href=\"#impl-Ord-for-Outcome%3CS,+E,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>, E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;S, E, F&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#104\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;S, E, F&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1009-1011\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1048-1050\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1074-1076\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","rocket::data::from_data::Outcome","rocket::request::from_request::Outcome","rocket::route::handler::Outcome"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Outcome%3CS,+E,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#114-618\">Source</a><a href=\"#impl-Outcome%3CS,+E,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, E, F&gt; <a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;S, E, F&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap\" class=\"method\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#132-137\">Source</a><h4 class=\"code-header\">pub fn <a href=\"rocket/outcome/enum.Outcome.html#tymethod.unwrap\" class=\"fn\">unwrap</a>(self) -&gt; S</h4></section></summary><div class=\"docblock\"><p>Unwraps the Outcome, yielding the contents of a Success.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if the value is not <code>Success</code>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Success(<span class=\"number\">10</span>);\n<span class=\"macro\">assert_eq!</span>(x.unwrap(), <span class=\"number\">10</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.expect\" class=\"method\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#156-161\">Source</a><h4 class=\"code-header\">pub fn <a href=\"rocket/outcome/enum.Outcome.html#tymethod.expect\" class=\"fn\">expect</a>(self, message: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; S</h4></section></summary><div class=\"docblock\"><p>Unwraps the Outcome, yielding the contents of a Success.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>If the value is not <code>Success</code>, panics with the given <code>message</code>.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Success(<span class=\"number\">10</span>);\n<span class=\"macro\">assert_eq!</span>(x.expect(<span class=\"string\">\"success value\"</span>), <span class=\"number\">10</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_success\" class=\"method\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#181-183\">Source</a><h4 class=\"code-header\">pub fn <a href=\"rocket/outcome/enum.Outcome.html#tymethod.is_success\" class=\"fn\">is_success</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Return true if this <code>Outcome</code> is a <code>Success</code>.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Success(<span class=\"number\">10</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_success(), <span class=\"bool-val\">true</span>);\n\n<span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Error(<span class=\"string\">\"Hi! I'm an error.\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_success(), <span class=\"bool-val\">false</span>);\n\n<span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Forward(<span class=\"number\">25</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_success(), <span class=\"bool-val\">false</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_error\" class=\"method\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#203-205\">Source</a><h4 class=\"code-header\">pub fn <a href=\"rocket/outcome/enum.Outcome.html#tymethod.is_error\" class=\"fn\">is_error</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Return true if this <code>Outcome</code> is an <code>Error</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Success(<span class=\"number\">10</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_error(), <span class=\"bool-val\">false</span>);\n\n<span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Error(<span class=\"string\">\"Hi! I'm an error.\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_error(), <span class=\"bool-val\">true</span>);\n\n<span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Forward(<span class=\"number\">25</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_error(), <span class=\"bool-val\">false</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_forward\" class=\"method\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#225-227\">Source</a><h4 class=\"code-header\">pub fn <a href=\"rocket/outcome/enum.Outcome.html#tymethod.is_forward\" class=\"fn\">is_forward</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Return true if this <code>Outcome</code> is a <code>Forward</code>.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Success(<span class=\"number\">10</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_forward(), <span class=\"bool-val\">false</span>);\n\n<span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Error(<span class=\"string\">\"Hi! I'm an error.\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_forward(), <span class=\"bool-val\">false</span>);\n\n<span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Forward(<span class=\"number\">25</span>);\n<span class=\"macro\">assert_eq!</span>(x.is_forward(), <span class=\"bool-val\">true</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.succeeded\" class=\"method\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#248-253\">Source</a><h4 class=\"code-header\">pub fn <a href=\"rocket/outcome/enum.Outcome.html#tymethod.succeeded\" class=\"fn\">succeeded</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;S&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code>Outcome&lt;S, E, F&gt;</code> to <code>Option&lt;S&gt;</code>.</p>\n<p>Returns the <code>Some</code> of the <code>Success</code> if this is a <code>Success</code>, otherwise\nreturns <code>None</code>. <code>self</code> is consumed, and all other values are discarded.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Success(<span class=\"number\">10</span>);\n<span class=\"macro\">assert_eq!</span>(x.succeeded(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n\n<span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Error(<span class=\"string\">\"Hi! I'm an error.\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.succeeded(), <span class=\"prelude-val\">None</span>);\n\n<span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Forward(<span class=\"number\">25</span>);\n<span class=\"macro\">assert_eq!</span>(x.succeeded(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.failed\" class=\"method\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#274-279\">Source</a><h4 class=\"code-header\">pub fn <a href=\"rocket/outcome/enum.Outcome.html#tymethod.failed\" class=\"fn\">failed</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;E&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code>Outcome&lt;S, E, F&gt;</code> to <code>Option&lt;E&gt;</code>.</p>\n<p>Returns the <code>Some</code> of the <code>Error</code> if this is an <code>Error</code>, otherwise\nreturns <code>None</code>. <code>self</code> is consumed, and all other values are discarded.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Success(<span class=\"number\">10</span>);\n<span class=\"macro\">assert_eq!</span>(x.failed(), <span class=\"prelude-val\">None</span>);\n\n<span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Error(<span class=\"string\">\"Hi! I'm an error.\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.failed(), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"Hi! I'm an error.\"</span>));\n\n<span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Forward(<span class=\"number\">25</span>);\n<span class=\"macro\">assert_eq!</span>(x.failed(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.forwarded\" class=\"method\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#300-305\">Source</a><h4 class=\"code-header\">pub fn <a href=\"rocket/outcome/enum.Outcome.html#tymethod.forwarded\" class=\"fn\">forwarded</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;F&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code>Outcome&lt;S, E, F&gt;</code> to <code>Option&lt;F&gt;</code>.</p>\n<p>Returns the <code>Some</code> of the <code>Forward</code> if this is a <code>Forward</code>, otherwise\nreturns <code>None</code>. <code>self</code> is consumed, and all other values are discarded.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Success(<span class=\"number\">10</span>);\n<span class=\"macro\">assert_eq!</span>(x.forwarded(), <span class=\"prelude-val\">None</span>);\n\n<span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Error(<span class=\"string\">\"Hi! I'm an error.\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.forwarded(), <span class=\"prelude-val\">None</span>);\n\n<span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Forward(<span class=\"number\">25</span>);\n<span class=\"macro\">assert_eq!</span>(x.forwarded(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">25</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.success_or\" class=\"method\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#328-333\">Source</a><h4 class=\"code-header\">pub fn <a href=\"rocket/outcome/enum.Outcome.html#tymethod.success_or\" class=\"fn\">success_or</a>&lt;T&gt;(self, value: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;S, T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a <code>Success</code> value as <code>Ok()</code> or <code>value</code> in <code>Err</code>. Converts from\n<code>Outcome&lt;S, E, F&gt;</code> to <code>Result&lt;S, T&gt;</code> for a given <code>T</code>.</p>\n<p>Returns <code>Ok</code> with the <code>Success</code> value if this is a <code>Success</code>, otherwise\nreturns an <code>Err</code> with the provided value. <code>self</code> is consumed, and all\nother values are discarded.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Success(<span class=\"number\">10</span>);\n<span class=\"macro\">assert_eq!</span>(x.success_or(<span class=\"bool-val\">false</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"number\">10</span>));\n\n<span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Error(<span class=\"string\">\"Hi! I'm an error.\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.success_or(<span class=\"bool-val\">false</span>), <span class=\"prelude-val\">Err</span>(<span class=\"bool-val\">false</span>));\n\n<span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Forward(<span class=\"number\">25</span>);\n<span class=\"macro\">assert_eq!</span>(x.success_or(<span class=\"string\">\"whoops\"</span>), <span class=\"prelude-val\">Err</span>(<span class=\"string\">\"whoops\"</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.success_or_else\" class=\"method\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#357-362\">Source</a><h4 class=\"code-header\">pub fn <a href=\"rocket/outcome/enum.Outcome.html#tymethod.success_or_else\" class=\"fn\">success_or_else</a>&lt;T, V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; T&gt;(self, f: V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;S, T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a <code>Success</code> value as <code>Ok()</code> or <code>f()</code> in <code>Err</code>. Converts from\n<code>Outcome&lt;S, E, F&gt;</code> to <code>Result&lt;S, T&gt;</code> for a given <code>T</code> produced from a\nsupplied function or closure.</p>\n<p>Returns <code>Ok</code> with the <code>Success</code> value if this is a <code>Success</code>, otherwise\nreturns an <code>Err</code> with the result of calling <code>f</code>. <code>self</code> is consumed, and\nall other values are discarded.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Success(<span class=\"number\">10</span>);\n<span class=\"macro\">assert_eq!</span>(x.success_or_else(|| <span class=\"bool-val\">false</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"number\">10</span>));\n\n<span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Error(<span class=\"string\">\"Hi! I'm an error.\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.success_or_else(|| <span class=\"bool-val\">false</span>), <span class=\"prelude-val\">Err</span>(<span class=\"bool-val\">false</span>));\n\n<span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Forward(<span class=\"number\">25</span>);\n<span class=\"macro\">assert_eq!</span>(x.success_or_else(|| <span class=\"string\">\"whoops\"</span>), <span class=\"prelude-val\">Err</span>(<span class=\"string\">\"whoops\"</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#377-383\">Source</a><h4 class=\"code-header\">pub fn <a href=\"rocket/outcome/enum.Outcome.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; <a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;E</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;F</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code>Outcome&lt;S, E, F&gt;</code> to <code>Outcome&lt;&amp;S, &amp;E, &amp;F&gt;</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Success(<span class=\"number\">10</span>);\n<span class=\"macro\">assert_eq!</span>(x.as_ref(), Success(<span class=\"kw-2\">&amp;</span><span class=\"number\">10</span>));\n\n<span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Error(<span class=\"string\">\"Hi! I'm an error.\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.as_ref(), Error(<span class=\"kw-2\">&amp;</span><span class=\"string\">\"Hi! I'm an error.\"</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#399-405\">Source</a><h4 class=\"code-header\">pub fn <a href=\"rocket/outcome/enum.Outcome.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut S</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut E</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code>Outcome&lt;S, E, F&gt;</code> to <code>Outcome&lt;&amp;mut S, &amp;mut E, &amp;mut F&gt;</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Success(<span class=\"number\">10</span>);\n<span class=\"kw\">if let </span>Success(val) = x.as_mut() {\n    <span class=\"kw-2\">*</span>val = <span class=\"number\">20</span>;\n}\n\n<span class=\"macro\">assert_eq!</span>(x.unwrap(), <span class=\"number\">20</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#421-427\">Source</a><h4 class=\"code-header\">pub fn <a href=\"rocket/outcome/enum.Outcome.html#tymethod.map\" class=\"fn\">map</a>&lt;T, M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(S) -&gt; T&gt;(self, f: M) -&gt; <a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;T, E, F&gt;</h4></section></summary><div class=\"docblock\"><p>Maps the <code>Success</code> value using <code>f</code>. Maps an <code>Outcome&lt;S, E, F&gt;</code> to an\n<code>Outcome&lt;T, E, F&gt;</code> by applying the function <code>f</code> to the value of type <code>S</code>\nin <code>self</code> if <code>self</code> is an <code>Outcome::Success</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Success(<span class=\"number\">10</span>);\n\n<span class=\"kw\">let </span>mapped = x.map(|v| <span class=\"kw\">if </span>v == <span class=\"number\">10 </span>{ <span class=\"string\">\"10\" </span>} <span class=\"kw\">else </span>{ <span class=\"string\">\"not 10\" </span>});\n<span class=\"macro\">assert_eq!</span>(mapped, Success(<span class=\"string\">\"10\"</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_error\" class=\"method\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#443-449\">Source</a><h4 class=\"code-header\">pub fn <a href=\"rocket/outcome/enum.Outcome.html#tymethod.map_error\" class=\"fn\">map_error</a>&lt;T, M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(E) -&gt; T&gt;(self, f: M) -&gt; <a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;S, T, F&gt;</h4></section></summary><div class=\"docblock\"><p>Maps the <code>Error</code> value using <code>f</code>. Maps an <code>Outcome&lt;S, E, F&gt;</code> to an\n<code>Outcome&lt;S, T, F&gt;</code> by applying the function <code>f</code> to the value of type <code>E</code>\nin <code>self</code> if <code>self</code> is an <code>Outcome::Error</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Error(<span class=\"string\">\"hi\"</span>);\n\n<span class=\"kw\">let </span>mapped = x.map_error(|v| <span class=\"kw\">if </span>v == <span class=\"string\">\"hi\" </span>{ <span class=\"number\">10 </span>} <span class=\"kw\">else </span>{ <span class=\"number\">0 </span>});\n<span class=\"macro\">assert_eq!</span>(mapped, Error(<span class=\"number\">10</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_forward\" class=\"method\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#465-471\">Source</a><h4 class=\"code-header\">pub fn <a href=\"rocket/outcome/enum.Outcome.html#tymethod.map_forward\" class=\"fn\">map_forward</a>&lt;T, M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(F) -&gt; T&gt;(self, f: M) -&gt; <a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;S, E, T&gt;</h4></section></summary><div class=\"docblock\"><p>Maps the <code>Forward</code> value using <code>f</code>. Maps an <code>Outcome&lt;S, E, F&gt;</code> to an\n<code>Outcome&lt;S, E, T&gt;</code> by applying the function <code>f</code> to the value of type <code>F</code>\nin <code>self</code> if <code>self</code> is an <code>Outcome::Forward</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Forward(<span class=\"number\">5</span>);\n\n<span class=\"kw\">let </span>mapped = x.map_forward(|v| <span class=\"kw\">if </span>v == <span class=\"number\">5 </span>{ <span class=\"string\">\"a\" </span>} <span class=\"kw\">else </span>{ <span class=\"string\">\"b\" </span>});\n<span class=\"macro\">assert_eq!</span>(mapped, Forward(<span class=\"string\">\"a\"</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.and_then\" class=\"method\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#495-501\">Source</a><h4 class=\"code-header\">pub fn <a href=\"rocket/outcome/enum.Outcome.html#tymethod.and_then\" class=\"fn\">and_then</a>&lt;T, M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(S) -&gt; <a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;T, E, F&gt;&gt;(\n    self,\n    f: M,\n) -&gt; <a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;T, E, F&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code>Outcome&lt;S, E, F&gt;</code> to <code>Outcome&lt;T, E, F&gt;</code> using <code>f</code> to map\n<code>Success(S)</code> to <code>Success(T)</code>.</p>\n<p>If <code>self</code> is not <code>Success</code>, <code>self</code> is returned.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, bool&gt; = Success(<span class=\"number\">10</span>);\n\n<span class=\"kw\">let </span>mapped = x.and_then(|v| <span class=\"kw\">match </span>v {\n   <span class=\"number\">10 </span>=&gt; Success(<span class=\"string\">\"10\"</span>),\n   <span class=\"number\">1 </span>=&gt; Forward(<span class=\"bool-val\">false</span>),\n   <span class=\"kw\">_ </span>=&gt; Error(<span class=\"string\">\"30\"</span>)\n});\n\n<span class=\"macro\">assert_eq!</span>(mapped, Success(<span class=\"string\">\"10\"</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.error_then\" class=\"method\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#525-531\">Source</a><h4 class=\"code-header\">pub fn <a href=\"rocket/outcome/enum.Outcome.html#tymethod.error_then\" class=\"fn\">error_then</a>&lt;T, M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(E) -&gt; <a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;S, T, F&gt;&gt;(\n    self,\n    f: M,\n) -&gt; <a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;S, T, F&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code>Outcome&lt;S, E, F&gt;</code> to <code>Outcome&lt;S, T, F&gt;</code> using <code>f</code> to map\n<code>Error(E)</code> to <code>Error(T)</code>.</p>\n<p>If <code>self</code> is not <code>Error</code>, <code>self</code> is returned.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, bool&gt; = Error(<span class=\"string\">\"hi\"</span>);\n\n<span class=\"kw\">let </span>mapped = x.error_then(|v| <span class=\"kw\">match </span>v {\n   <span class=\"string\">\"hi\" </span>=&gt; Error(<span class=\"number\">10</span>),\n   <span class=\"string\">\"test\" </span>=&gt; Forward(<span class=\"bool-val\">false</span>),\n   <span class=\"kw\">_ </span>=&gt; Success(<span class=\"number\">10</span>)\n});\n\n<span class=\"macro\">assert_eq!</span>(mapped, Error(<span class=\"number\">10</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.forward_then\" class=\"method\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#555-561\">Source</a><h4 class=\"code-header\">pub fn <a href=\"rocket/outcome/enum.Outcome.html#tymethod.forward_then\" class=\"fn\">forward_then</a>&lt;T, M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(F) -&gt; <a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;S, E, T&gt;&gt;(\n    self,\n    f: M,\n) -&gt; <a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;S, E, T&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code>Outcome&lt;S, E, F&gt;</code> to <code>Outcome&lt;S, E, T&gt;</code> using <code>f</code> to map\n<code>Forward(F)</code> to <code>Forward(T)</code>.</p>\n<p>If <code>self</code> is not <code>Forward</code>, <code>self</code> is returned.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, <span class=\"prelude-ty\">Option</span>&lt;bool&gt;&gt; = Forward(<span class=\"prelude-val\">Some</span>(<span class=\"bool-val\">false</span>));\n\n<span class=\"kw\">let </span>mapped = x.forward_then(|v| <span class=\"kw\">match </span>v {\n   <span class=\"prelude-val\">Some</span>(<span class=\"bool-val\">true</span>) =&gt; Success(<span class=\"number\">10</span>),\n   <span class=\"prelude-val\">Some</span>(<span class=\"bool-val\">false</span>) =&gt; Forward(<span class=\"number\">20</span>),\n   <span class=\"prelude-val\">None </span>=&gt; Error(<span class=\"string\">\"10\"</span>)\n});\n\n<span class=\"macro\">assert_eq!</span>(mapped, Forward(<span class=\"number\">20</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ok_map_forward\" class=\"method\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#581-589\">Source</a><h4 class=\"code-header\">pub fn <a href=\"rocket/outcome/enum.Outcome.html#tymethod.ok_map_forward\" class=\"fn\">ok_map_forward</a>&lt;M&gt;(self, f: M) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;S, E&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;S, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Converts <code>Outcome&lt;S, E, F&gt;</code> to <code>Result&lt;S, E&gt;</code> by identity mapping\n<code>Success(S)</code> and <code>Error(E)</code> to <code>Result&lt;T, E&gt;</code> and mapping <code>Forward(F)</code>\nto <code>Result&lt;T, E&gt;</code> using <code>f</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Success(<span class=\"number\">10</span>);\n<span class=\"macro\">assert_eq!</span>(x.ok_map_forward(|x| <span class=\"prelude-val\">Ok</span>(x <span class=\"kw\">as </span>i32 + <span class=\"number\">1</span>)), <span class=\"prelude-val\">Ok</span>(<span class=\"number\">10</span>));\n\n<span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Error(<span class=\"string\">\"hello\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.ok_map_forward(|x| <span class=\"prelude-val\">Ok</span>(x <span class=\"kw\">as </span>i32 + <span class=\"number\">1</span>)), <span class=\"prelude-val\">Err</span>(<span class=\"string\">\"hello\"</span>));\n\n<span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Forward(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(x.ok_map_forward(|x| <span class=\"prelude-val\">Ok</span>(x <span class=\"kw\">as </span>i32 + <span class=\"number\">1</span>)), <span class=\"prelude-val\">Ok</span>(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ok_map_error\" class=\"method\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#609-617\">Source</a><h4 class=\"code-header\">pub fn <a href=\"rocket/outcome/enum.Outcome.html#tymethod.ok_map_error\" class=\"fn\">ok_map_error</a>&lt;M&gt;(self, f: M) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;S, F&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(E) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;S, F&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Converts <code>Outcome&lt;S, E, F&gt;</code> to <code>Result&lt;S, E&gt;</code> by identity mapping\n<code>Success(S)</code> and <code>Forward(F)</code> to <code>Result&lt;T, F&gt;</code> and mapping <code>Error(E)</code>\nto <code>Result&lt;T, F&gt;</code> using <code>f</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Success(<span class=\"number\">10</span>);\n<span class=\"macro\">assert_eq!</span>(x.ok_map_error(|s| <span class=\"prelude-val\">Ok</span>(<span class=\"number\">123</span>)), <span class=\"prelude-val\">Ok</span>(<span class=\"number\">10</span>));\n\n<span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Error(<span class=\"string\">\"hello\"</span>);\n<span class=\"macro\">assert_eq!</span>(x.ok_map_error(|s| <span class=\"prelude-val\">Ok</span>(<span class=\"number\">123</span>)), <span class=\"prelude-val\">Ok</span>(<span class=\"number\">123</span>));\n\n<span class=\"kw\">let </span>x: Outcome&lt;i32, <span class=\"kw-2\">&amp;</span>str, usize&gt; = Forward(<span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(x.ok_map_error(|s| <span class=\"prelude-val\">Ok</span>(<span class=\"number\">123</span>)), <span class=\"prelude-val\">Err</span>(<span class=\"number\">0</span>));</code></pre></div>\n</div></details></div></details>",0,"rocket::data::from_data::Outcome","rocket::request::from_request::Outcome","rocket::route::handler::Outcome"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Outcome%3CS,+E,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#620-628\">Source</a><a href=\"#impl-Outcome%3CS,+E,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a, E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a&gt; <a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;S, E, F&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.pin\" class=\"method\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#625-627\">Source</a><h4 class=\"code-header\">pub fn <a href=\"rocket/outcome/enum.Outcome.html#tymethod.pin\" class=\"fn\">pin</a>(self) -&gt; <a class=\"type\" href=\"futures_core/future/type.BoxFuture.html\" title=\"type futures_core::future::BoxFuture\">BoxFuture</a>&lt;'a, Self&gt;</h4></section></summary><div class=\"docblock\"><p>Pins a future that resolves to <code>self</code>, returning a\n<a href=\"futures_core/future/type.BoxFuture.html\" title=\"type futures_core::future::BoxFuture\"><code>BoxFuture</code></a> that resolves to\n<code>self</code>.</p>\n</div></details></div></details>",0,"rocket::data::from_data::Outcome","rocket::request::from_request::Outcome","rocket::route::handler::Outcome"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Outcome%3CS,+E,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#104\">Source</a><a href=\"#impl-PartialEq-for-Outcome%3CS,+E,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;S, E, F&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#104\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;S, E, F&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","rocket::data::from_data::Outcome","rocket::request::from_request::Outcome","rocket::route::handler::Outcome"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Outcome%3CS,+E,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#104\">Source</a><a href=\"#impl-PartialOrd-for-Outcome%3CS,+E,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>, E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;S, E, F&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#104\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;S, E, F&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1382\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1400\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1418\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1436\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","rocket::data::from_data::Outcome","rocket::request::from_request::Outcome","rocket::route::handler::Outcome"],["<section id=\"impl-Copy-for-Outcome%3CS,+E,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#104\">Source</a><a href=\"#impl-Copy-for-Outcome%3CS,+E,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;S, E, F&gt;</h3></section>","Copy","rocket::data::from_data::Outcome","rocket::request::from_request::Outcome","rocket::route::handler::Outcome"],["<section id=\"impl-Eq-for-Outcome%3CS,+E,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#104\">Source</a><a href=\"#impl-Eq-for-Outcome%3CS,+E,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>, E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;S, E, F&gt;</h3></section>","Eq","rocket::data::from_data::Outcome","rocket::request::from_request::Outcome","rocket::route::handler::Outcome"],["<section id=\"impl-StructuralPartialEq-for-Outcome%3CS,+E,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rocket/outcome.rs.html#104\">Source</a><a href=\"#impl-StructuralPartialEq-for-Outcome%3CS,+E,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, E, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"enum\" href=\"rocket/outcome/enum.Outcome.html\" title=\"enum rocket::outcome::Outcome\">Outcome</a>&lt;S, E, F&gt;</h3></section>","StructuralPartialEq","rocket::data::from_data::Outcome","rocket::request::from_request::Outcome","rocket::route::handler::Outcome"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[63709]}